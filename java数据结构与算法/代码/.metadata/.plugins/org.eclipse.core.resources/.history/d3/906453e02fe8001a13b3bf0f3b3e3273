package floyd;

import java.util.Arrays;

public class FloydAlgorithm {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        
		// 测试看看图是否创建成功
		
		

}

class Graph{
	char[] vertex;
	private int[][] dis;//保存从各个顶点出发到其他顶点的距离
	
	private int[][] pre;//保存到达目标顶点的前驱顶点
	
	//构造器
	/**
	 * 
	 * @param length 大小
	 * @param matrix 邻接矩阵
	 * @param vertex 顶点数组
	 */
	public Graph(int length,int[][] matrix,char[] vertex) {
	      this.vertex = vertex;
	      this.dis = matrix;
	      
	      this.pre = new int[length][length];
	      
	      //对pre数组初始化，存放的是前驱顶点的下标
	      
	      for(int i = 0;i<length;i++) {
	    	  Arrays.fill(pre[i],i);
	      }
	      
	}
	
	//显示pre和dis数组
	
	public void show() {
		for(int k = 0;k<dis.length;k++) {
			for(int i = 0;i<dis.length;i++) {
				System.out.print(pre[k][i]+" ");
			}
			//输出dis数组的一行数据
			for(int i = 0;i<dis.length;i++) {
				System.out.print(dis[k][i]+" ");
			}
			System.out.println();
			System.out.println();
		}
	}
}